# PRIMARY CONTROL - MAZAK-VQC1540 mill
# Author: Timothy Snowden / Solid Rock Development
#         (begun with 5i25/7i77 configuration by PNCConf)
# !!! DO NOT MODIFY WITH PNCCONF - FILE WILL BE RUINED !!!
# NOTES:
# - Spindle-control in spindle.hal
# - Tool-change (ATC) in atc.hal
# - PLC (ClassicLadder) connections in plc.hal
# - GUI-dependent connections in postgui.hal

#=============================
# MODULES/FUNCTIONS
#=============================
#-------------------
# LOAD MODULES
#-------------------
# Trivial Kinematics module (1:1 correspondence between joints & axes)
loadrt trivkins

# EMC Motion control module - servo period freq & # of joints
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES num_dio=[EMCMOT]NUM_DIO num_aio=[EMCMOT]NUM_AIO

# Mesa Driver - generic (hostmot2)
loadrt hostmot2
# Mesa Driver - Anything I/O board specific (eth, 7i80)
# sserial_port config:
# - 7i80 - Anything I/O Board --> not a serial port
# - 7i49 - Resolver/Analog Servo Board --> not a serial port
# - 7i44 - Ethernet Connection Board --> serial port #0 (8 channels)
# - 7i84 - GPIO Board --> channels 0 & 1 (two boards)
#    * 0: I/O only
#    * 1: I/O + VFieldIn + Ain x 4 (analog channels0...3)
#    * 2: I/O + VFieldIn + Ain x 4 + MPG Encoder x2 (inputs 16...19)
# - 7i73 - Pendant/Remote Interface -->  channel 2
#    * 0: I/O + encoder
#    * 1: I/O + encoder + Ain
#    * 2: I/O + encoder + Ain fast display
# Choose mode PER CHANNEL (= per board)
# x = disabled (which defaults to GPIO if available)
loadrt hm2_eth board_ip="192.168.1.121" config="num_resolvers=6 num_encoders=0 num_pwmgens=4 num_stepgens=0 sserial_port_0=000xxx"

# PID Realtime Loop Component - axis x, y, & z
loadrt pid names=pid.x,pid.y,pid.z,pid.s


#-------------------
# LOAD MODULES
#-------------------
# Set watchdog timer
setp    hm2_7i80.0.watchdog.timeout_ns 5000000

#-------------------
# LOAD FUNCTIONS
#-------------------
# Every servo thread cycle:

# - Read the 7i80 pins:
addf hm2_7i80.0.read          servo-thread

# - Motion command handler:
addf motion-command-handler   servo-thread

# - Motion controller:
addf motion-controller        servo-thread

# - Update the PID calculations for the:
#   * X-axis:
addf pid.x.do-pid-calcs       servo-thread
#   * Y-axis:
addf pid.y.do-pid-calcs       servo-thread
#   * Z-axis:
addf pid.z.do-pid-calcs       servo-thread

# - Write out new values to the 7i80 pins every servo-thread cycle:
addf hm2_7i80.0.write         servo-thread


#=============================
# SIGNALS
#=============================
# NOTE:
# - All spindle signals, etc in 'spindle.hal'
# - All toolchange signals, etc in 'atc.hal'
# - All connections in/out of PLC in 'plc.hal'
# - All connections relying on GUI in 'postgui.hal'

# MESA NAMING SCHEME NOTES:
# Current understanding of naming scheme for daughter I/O boards:
# hm2_<FPGA-board>.<FPGA-board-number>.<daughter-board>.<serial-port-number>.<serial-channel-number>.<input-or-output>-<pin-number>
# Example: hm2_7i80.0.7i84.0.1.input-00
# - FPGA-board = 7i80 (main board connecting to computer)
# - FPGA-board-number = 0 (1st one ... MOST configurations only have one)
# - daughter-board = 7i84
# - serial-port-number = 0 (1st serial port. Only have one in this configuration ... the 7i44)
# - serial-channel-number = 1 (1st channel of 8 potential ones FOR THIS SERIAL PORT, as there are 8 channels on the 7i44. We are only using 0 & 1 right now for the two 7i84s)
# - input-or-output = an input, so put 'input' (and use 'output' for an output...)
# - pin-number = the given pin number, starting with 00, numbered for the BOARD, not the connector. See given manual for numbering.

#-------------------
# EXTERNAL OUTPUT SIGNALS
#-------------------
# Note: most are handled in plc.hal

# Work Light
net work-light 			hm2_7i80.0.7i84.0.1.output-04 #not used until integrated with GMOCCAPY or other button

#-------------------
# EXTERNAL INPUT SIGNALS
#-------------------

# Most external signals handled in plc.hal

#=============================
# AXIS SETUP
#=============================
# Set resolver excitation frequency (same for all axes)
setp hm2_7i80.0.resolver.excitation-khz [AXES]RESOLVER_EXC_FREQ

#-------------------
# AXIS-X
#-------------------
# Servo Enable Command
net servo-x-enable		<=	axis.0.amp-enable-out

# Set PID-loop Parameters (from .ini file variables):
setp   pid.x.Pgain     [AXIS_0]P
setp   pid.x.Igain     [AXIS_0]I
setp   pid.x.Dgain     [AXIS_0]D
setp   pid.x.bias      [AXIS_0]BIAS
setp   pid.x.FF0       [AXIS_0]FF0
setp   pid.x.FF1       [AXIS_0]FF1
setp   pid.x.FF2       [AXIS_0]FF2
setp   pid.x.deadband  [AXIS_0]DEADBAND
setp   pid.x.maxoutput [AXIS_0]MAX_OUTPUT
setp   pid.x.error-previous-target true
setp   pid.x.maxerror  [AXIS_0]MAX_ERROR

# Connect Virtual Pins to X-axis PID Loop:
net x-index-enable	=>	pid.x.index-enable
net servo-x-enable     	=>	pid.x.enable
net x-pos-cmd        	=>	pid.x.command
net x-vel-cmd        	=>	pid.x.command-deriv
net x-pos-fb         	=>	pid.x.feedback
net x-output         	<=	pid.x.output


# AXIS SERVO DRIVE / AMPLIFIER FAULT (from PLC)
net plc-servo-x-drive-alarm	=>	axis.0.amp-fault-in


# PWM GENERATOR SETUP
# Set PWMGen type for 7i49 (2 = up/down) - x-axis
setp hm2_7i80.0.pwmgen.00.output-type			2

# Set x-axis PWMGen scale - from .ini file
setp hm2_7i80.0.pwmgen.00.scale  			[AXIS_0]OUTPUT_SCALE

# Connect Signals:
# - Analog servo drive command signal to Mesa board analog-out
net x-output  			=>	hm2_7i80.0.pwmgen.00.value
# - Commanded-position from internal axis module
net x-pos-cmd 			<=	axis.0.motor-pos-cmd


# RESOLVER FEEDBACK SIGNALS/SETUP
# Set Parameters from .ini File Variables:
# - Index-divisor: number of cycles per rev of the resolver (used to generate an emulated index)
setp hm2_7i80.0.resolver.00.index-divisor		[AXIS_0]RESOLVER_INDEX_DIVISOR
# - Position scale, in machine units per resolver electrical revolution
setp hm2_7i80.0.resolver.00.scale  				[AXIS_0]RESOLVER_SCALE
# -  Conversion factor between resolver rotation speed and machine velocity
setp hm2_7i80.0.resolver.00.velocity-scale		[AXIS_0]RESOLVER_VELOCITY_SCALE

# Connect Signals:
# - Position feedback from Mesa board
net x-pos-fb			<=	hm2_7i80.0.resolver.00.position
# - Velocity feedback from Mesa board
net x-vel-fb			<=	hm2_7i80.0.resolver.00.velocity
# - Position feedback to internal axis module
net x-pos-fb			=>	axis.0.motor-pos-fb
# - Index enable (reset position & count pins every time resolver passes through 0 position)
net x-index-enable 			axis.0.index-enable  <=>  hm2_7i80.0.resolver.00.index-enable
# - Counts (simulated encoder count at 2^24 counts per rev = 16777216 counts, but not reset by 'index' or 'reset' pins)
net x-pos-rawcounts		<=	hm2_7i80.0.resolver.00.rawcounts

# HOME/LIMIT-SWITCH SIGNAL SETUP
# Homing Switch:
net x-home		    	=>	axis.0.home-sw-in
# -X Limit Switch:
#net UNUSED			=>	axis.0.neg-lim-sw-in
# +X Limit Switch:
net x-home			=>	axis.0.pos-lim-sw-in
# Homing Signal:
net x-homing			<=	axis.0.homing

#-------------------
# AXIS-Y
#-------------------
# Servo Enable Command
net servo-y-enable		<=	axis.1.amp-enable-out

# Set PID-loop Parameters (from .ini file variables):
setp   pid.y.Pgain     [AXIS_1]P
setp   pid.y.Igain     [AXIS_1]I
setp   pid.y.Dgain     [AXIS_1]D
setp   pid.y.bias      [AXIS_1]BIAS
setp   pid.y.FF0       [AXIS_1]FF0
setp   pid.y.FF1       [AXIS_1]FF1
setp   pid.y.FF2       [AXIS_1]FF2
setp   pid.y.deadband  [AXIS_1]DEADBAND
setp   pid.y.maxoutput [AXIS_1]MAX_OUTPUT
setp   pid.y.error-previous-target true
setp   pid.y.maxerror  [AXIS_1]MAX_ERROR

# Connect Virtual Pins between Modules:
net y-index-enable		<=>	pid.y.index-enable
net servo-y-enable     	=>	pid.y.enable
net y-pos-cmd        	<=	pid.y.command
net y-vel-cmd        	<=	pid.y.command-deriv
net y-pos-fb         	=>	pid.y.feedback
net y-output         	<=	pid.y.output


# AXIS SERVO DRIVE / AMPLIFIER FAULT (from PLC)
net plc-servo-y-drive-alarm	=>	axis.1.amp-fault-in


# PWM GENERATOR SETUP
# Set PWMGen type for 7i49 (2 = up/down) - y-axis
setp 	hm2_7i80.0.pwmgen.01.output-type 2

# Set y-axis PWMGen scale - from .ini file
setp hm2_7i80.0.pwmgen.01.scale  			[AXIS_1]OUTPUT_SCALE

# Connect Signals:
# - Analog servo drive command signal to Mesa board analog-out
net y-output  			=>	hm2_7i80.0.pwmgen.01.value
# - Commanded-position to internal axis module
net y-pos-cmd 			<=	axis.1.motor-pos-cmd


# RESOLVER FEEDBACK SIGNALS/SETUP
# Set Parameters from .ini File Variables:
# - Index-divisor: number of cycles per rev of the resolver (used to generate an emulated index)
setp hm2_7i80.0.resolver.01.index-divisor 		[AXIS_1]RESOLVER_INDEX_DIVISOR
# - Position scale, in machine units per resolver electrical revolution
setp hm2_7i80.0.resolver.01.scale  				[AXIS_1]RESOLVER_SCALE
# -  Conversion factor between resolver rotation speed and machine velocity
setp hm2_7i80.0.resolver.01.velocity-scale 		[AXIS_1]RESOLVER_VELOCITY_SCALE

# Connect Signals:
# - Position feedback from Mesa board
net y-pos-fb			<=	hm2_7i80.0.resolver.01.position
# - Velocity feedback from Mesa board
net y-vel-fb			<=	hm2_7i80.0.resolver.01.velocity
# - Position feedback to internal axis module
net y-pos-fb			=>	axis.1.motor-pos-fb
# - Index enable (reset position & count pins every time resolver passes through 0 position)
net y-index-enable axis.1.index-enable  <=>  hm2_7i80.0.resolver.01.index-enable
# - Counts (simulated encoder count at 2^24 counts per rev = 16777216 counts, but not reset by 'index' or 'reset' pins)
net y-pos-rawcounts		<=	hm2_7i80.0.resolver.01.rawcounts

# HOME/LIMIT-SWITCH SIGNAL SETUP
# Homing Switch:
net y-home			=>	axis.1.home-sw-in
# -Y Limit Switch:
#net UNUSED			=>	axis.1.neg-lim-sw-in
# +Y Limit Switch:
net y-home			=>	axis.1.pos-lim-sw-in
# Homing Signal:
net y-homing			<=	axis.1.homing


#-------------------
# AXIS-Z
#-------------------
# Servo Enable Command
net servo-z-enable		<=	axis.2.amp-enable-out

# Set PID-loop Parameters (from .ini file variables):
setp   pid.z.Pgain     [AXIS_2]P
setp   pid.z.Igain     [AXIS_2]I
setp   pid.z.Dgain     [AXIS_2]D
setp   pid.z.bias      [AXIS_2]BIAS
setp   pid.z.FF0       [AXIS_2]FF0
setp   pid.z.FF1       [AXIS_2]FF1
setp   pid.z.FF2       [AXIS_2]FF2
setp   pid.z.deadband  [AXIS_2]DEADBAND
setp   pid.z.maxoutput [AXIS_2]MAX_OUTPUT
setp   pid.z.error-previous-target true
setp   pid.z.maxerror  [AXIS_2]MAX_ERROR

# Connect Virtual Pins between Modules:
net z-index-enable		<=>	pid.z.index-enable
net servo-z-enable	 =>	pid.z.enable
net z-pos-cmd   	     =>	pid.z.command
net z-vel-cmd       	 =>	pid.z.command-deriv
net z-pos-fb        	 =>	pid.z.feedback
net z-output        	 =>	pid.z.output


# AXIS SERVO DRIVE / AMPLIFIER FAULT (from PLC)
net plc-servo-z-drive-alarm	=>	axis.2.amp-fault-in


# PWM GENERATOR SETUP
# Set PWMGen type for 7i49 (2 = up/down) - z-axis
setp 	hm2_7i80.0.pwmgen.02.output-type 2

# Set z-axis PWMGen scale - from .ini file
setp hm2_7i80.0.pwmgen.02.scale  			[AXIS_2]OUTPUT_SCALE

# Connect Signals:
# - Analog servo drive command signal to Mesa board analog-out
net z-output  			=>	hm2_7i80.0.pwmgen.02.value
# - Commanded-position to internal axis module
net z-pos-cmd 			=>	axis.2.motor-pos-cmd


# RESOLVER FEEDBACK SIGNALS/SETUP
# Set Parameters from .ini File Variables:
# - Index-divisor: number of cycles per rev of the resolver (used to generate an emulated index)
setp hm2_7i80.0.resolver.02.index-divisor 		[AXIS_2]RESOLVER_INDEX_DIVISOR
# - Position scale, in machine units per resolver electrical revolution
setp hm2_7i80.0.resolver.02.scale  				[AXIS_2]RESOLVER_SCALE
# -  Conversion factor between resolver rotation speed and machine velocity
setp hm2_7i80.0.resolver.02.velocity-scale 		[AXIS_2]RESOLVER_VELOCITY_SCALE

# Connect Signals:
# - Position feedback from Mesa board
net z-pos-fb			<=	hm2_7i80.0.resolver.02.position
# - Velocity feedback from Mesa board
net z-vel-fb			<=	hm2_7i80.0.resolver.02.velocity
# - Position feedback to internal axis module
net z-pos-fb			=>	axis.2.motor-pos-fb
# - Index enable (reset position & count pins every time resolver passes through 0 position)
net z-index-enable axis.2.index-enable  <=>  hm2_7i80.0.resolver.02.index-enable
# - Counts (simulated encoder count at 2^24 counts per rev = 16777216 counts, but not reset by 'index' or 'reset' pins)
net z-pos-rawcounts		<=	hm2_7i80.0.resolver.02.rawcounts

# HOME/LIMIT-SWITCH SIGNAL SETUP
# Homing Switch:
net z-home			=>	axis.2.home-sw-in
# -Z Limit Switch:
#net UNUSED			=>	axis.2.neg-lim-sw-in
# +Z Limit Switch:
net z-home			=>	axis.2.pos-lim-sw-in
# Homing Signal:
net z-homing			<=	axis.2.homing

#=============================
# INTERNAL SIGNALS
#=============================
#-------------------
# HALUI MODULE SIGNALS
#-------------------
# Joints-to-Axes
# - X-axis
net joint-select-a		=>	halui.joint.0.select
net x-is-homed			<=	halui.joint.0.is-homed
net jog-x-pos             halui.jog.0.plus
net jog-x-neg             halui.jog.0.minus
net jog-x-analog          halui.jog.0.analog

# - Y-axis
net joint-select-b        halui.joint.1.select
net y-is-homed            halui.joint.1.is-homed
net jog-y-pos             halui.jog.1.plus
net jog-y-neg             halui.jog.1.minus
net jog-y-analog          halui.jog.1.analog

# - Z-axis
net joint-select-c        halui.joint.2.select
net z-is-homed            halui.joint.2.is-homed
net jog-z-pos             halui.jog.2.plus
net jog-z-neg             halui.jog.2.minus
net jog-z-analog          halui.jog.2.analog

# MDI/Jogging
net MDI-mode			<=	halui.mode.is-mdi
net jog-selected-pos		<=	halui.jog.selected.plus
net jog-selected-neg		<=	halui.jog.selected.minus
net jog-speed			<=	halui.jog-speed 


#-------------------
# IOCONTROL MODULE SIGNALS
#-------------------
# Coolant
net coolant-mist  		<=	iocontrol.0.coolant-mist
net coolant-flood 		<=	iocontrol.0.coolant-flood

# Enable / ESTOP:
net plc-estop			=>	iocontrol.0.emc-enable-in
net estop-reset			<=	iocontrol.0.user-request-enable
net estop-out			<=	iocontrol.0.user-enable-out

# See atc.hal for tool-change related IOCONTROL signals

# PROBE SIGNAL
net probe-in 			=>	motion.probe-input

#-------------------
# MOTION MODULE SIGNALS
#-------------------
# Feed hold
net feed-hold			=> motion.feed-hold

#-------------------
# MISC CONNECTIONS
#-------------------
